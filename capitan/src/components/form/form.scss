@charset "utf-8";

/**
 * Capitan forms.scss v2.0.0
 *
 * Copyright brandung GmbH & Co.KG
 * http://www.brandung.de/
 *
 * Date: 2017-01-11
 * MIT License (MIT)
 */

@import '../../sass/partials/functions';
@import '../../sass/partials/variables';
@import '../../sass/partials/mixins';

/* ==========================================================================
   Form Elements
   ========================================================================== */

$component: 'form';
$bg-color: color('grey-lightest');
$bg-color-focus: color('white');
$border-color-focus: #ccc;
$input-height: 50px;

// Global form styling
input,
textarea,
select {
	@include font($ff-medium, $typo-weight-normal);
	@include fontSizeREM(16);
	@include prefix(transition, all .2s);
	color: color('black');

	&:focus {
		outline: none;
	}
}

label {
	cursor: pointer;
}

::-webkit-input-placeholder {
	color: color('black');
}

::-moz-placeholder {
	color: color('black');
}

:-ms-input-placeholder {
	color: color('black');
}

::-ms-clear {
	display: none;
}


// block
%#{$component} {
	@include clearfix();
	
	input,
	textarea {
		-webkit-appearance: none;
		resize: none;
	}

	// input, select, textarea
	input:not([type='checkbox']):not([type='radio']),
	select,
	textarea {
		@include prefix(border-radius, 0);
		position: relative;
		z-index: 1;
		background: $bg-color;
		padding: 12px $grid-gutter-width-half 10px;
		width: 100%;
		border: solid 1px color('green-light');

		@include respondMin(point('min-md')) {
			padding: 12px $grid-gutter-width 10px;
		}

		&:hover,
		&[readonly] {
			cursor: pointer;
		}

		&[disabled] {
			background: color('grey-lightest');
			color: color('green-light');
			cursor: not-allowed;
		}

		&:focus {
			@include prefix(box-shadow, 1);
			outline: none;
			color: color('black');
			border-color: $border-color-focus;
			background: $bg-color-focus;
		}

		&.is-invalid {
			border-color: color('error');
		}
	}

	input:not([type='checkbox']):not([type='radio']) {
		height: $input-height;
	}

	textarea {
		min-height: 200px;
	}

	select {
		height: $input-height;
		line-height: $input-height;
		padding: 0 $grid-gutter-width;
		color: color('black');
	}

	// radios and checkboxes
	input[type="radio"],
	input[type="checkbox"] {
		position: absolute;
		left: -9999px;

		+ label {
			@include fontSizeREM(13);
			cursor: pointer;
			position: relative;
			padding-left: 30px;
			//padding-top: 1px;
			display: inline-block;
			cursor: pointer;
			margin: $grid-gutter-width/2 0;

			&:hover,
			.active {
				&:before {
					
				}
			}

			&:before,
			&:after {
				color: color('ci');
				content: '';
				display: block;
				position: absolute;
				@include prefix(transition, all .1s ease-out);
				@include prefix(box-sizing, border-box);
			}

			&:before {
				width: 20px;
				height: 20px;
				top: 0;
				left: 0;
				border: solid 1px color('green-light');
				background: white;
				text-align: center;
			}

			&:after {
				@include prefix(transform, scale(0));
			}
		}
	}
	
	input[type="checkbox"] + label {
		&:after {
			@include font($ff-icon);
			@include fontSizeREM(14);
			content: '\e905';
			background: none;
			top: 1px;
			left: 3px;
		}
	}
	
	input[type="radio"] + label {
		&:before,
		&:after {
			@include prefix(border-radius, 100%);
		}
		
		&:after {
			left: 3px;
			top: 3px;
			width: 14px;
			height: 14px;
			background: color('ci');
		}
		
		&:hover {
			&:after {
				background: color('ci');
			}
		}
	}

	input[type="checkbox"]:checked,
	input[type="radio"]:checked {
		+ label:after {
			@include prefix(transform, scale(1));
		}
	}

	.search-form {
      	.search-form__input {
			@include prefix(box-shadow, none);
		}

		.search-form__button {
			background: transparent;
			height: 46px;
			right: 2px;
			top: 22px;
			z-index: 1;

			&:hover {
				border: transparent;
				color: color('ci-hover');
			}
		}
	}
}


// element
.#{$component}__field-wrapper {
	position: relative;
	margin-top: 0;
	margin-bottom: $grid-gutter-width;

	input:not([type='checkbox']):not([type='radio']):not([type='file']),
	select,
	textarea {
		margin-top: $grid-gutter-width;
	}

	&.is-invalid {

		.#{$component}__label {
			color: color('error');
		}

		input:not([type='checkbox']):not([type='radio']):not([type='file']),
		select,
		textarea,
		.select2-selection--single {
			border-color: color('error') !important;
		}

		input[type='checkbox'],
		input[type='radio'] {
			+ .#{$component}__label:before {
				border-color: color('error');
			}
		}

		input[type='file'] {
			+ .#{$component}__label {
				border-color: color('error');
			}
		}

		.#{$component}__error {
			display: block;
			color: color('error');
		}
	}

	&.is-valid {

		.#{$component}__label {
			color: color('success');
		}

		input:not([type='checkbox']):not([type='radio']):not([type='file']),
		select,
		textarea,
		.select2-selection--single {
			border-color: color('success') !important;
		}

		input[type='checkbox'],
		input[type='radio'] {
			+ .#{$component}__label {
				color: color('black');

				&:before {
					border-color: color('success');
				}
			}
		}

		input[type='file'] {
			+ .#{$component}__label {
				color: color('black');
				border-color: color('success');
			}
		}
	}
}

.#{$component}__label {

	input:not([type='checkbox']):not([type='radio']):not([type='file']) + &,
	select + &,
	textarea + & {
		position: absolute;
		top: 0;
		z-index: 1;
		text-align: left;
		pointer-events: none;
		max-width: calc(100% - 50px);
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
	}

	input[type='file'] + & span {
		position: absolute;
		top: 0;
		z-index: 1;
		text-align: left;
		pointer-events: none;
		max-width: calc(100% - 50px);
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
	}

	.fancybox-container & {
		@include font($ff-medium, $typo-weight-normal);
		@include fontSizeREM(16);
	}
}

.#{$component}__error {
	@include prefix(transition, 'transform 150ms ease');
	display: none;
	position: absolute;
	z-index: 0;
	bottom: -$input-height/2;
	left: $grid-gutter-width-half;
	right: $grid-gutter-width-half;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;

	.is-invalid {
		color: color('error');
	}

	input[type='checkbox'] ~ & ,
	input[type='radio'] ~ & {
		margin-left: 50px;
		bottom: -10px;
	}
}

.#{$component}__upload {
	position: relative;

	.#{$component}__input {
		opacity: 0;
	}

	.#{$component}__label {
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		z-index: 1;
		height: 50px;
		background: $bg-color;
		padding: 12px $grid-gutter-width 10px;
		width: 100%;
		border: solid 1px color('green-light');

		&::after {
			@include font($ff-icon);
			@include fontSizeREM(25);
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			z-index: 3;
			display: block;
			padding: 7px $grid-gutter-width;
			color: color('ci');
			content: icon('attachment');
			background: $bg-color;
			border-left: none;
		}
	}

	small {
		margin: $grid-gutter-width-half 0 0;
	}
}


// modifier
.#{$component}--transition {

	::-webkit-input-placeholder {
		color: transparent;
	}

	::-moz-placeholder {
		color: transparent;
	}

	:-ms-input-placeholder {
		color: transparent;
	}


	.#{$component}__field-wrapper {

		margin-top: $grid-gutter-width;
		margin-bottom: $grid-gutter-width;

		input:not([type='checkbox']):not([type='radio']):not([type='file']),
		select,
		textarea {
			margin-top: 0;
		}

		&.is-invalid {

			input:not([type='checkbox']):not([type='radio']):not([type='file']),
			select,
			textarea {

				+ .#{$component}__label {
					@include prefix(transform, 'translate(0,-36px)');
					@include fontSizeREM(14);
					background: color('white');
					color: color('error');
				}
			}

			.#{$component}__error {
				@include prefix(transform, 'translate(0, 21px)');
			}

			input[type='checkbox'] ,
			input[type='radio'] {

				~ .#{$component}__error {
					display: block;
					@include prefix(transform, 'translate(0, 0)');
				}
			}
		}

		&.is-valid {

			input:not([type='checkbox']):not([type='radio']):not([type='file']),
			select,
			textarea {

				+ .#{$component}__label {
					@include prefix(transform, 'translate(0,-36px)');
					@include fontSizeREM(14);
					background: color('white');
					color: color('success');
				}
			}
		}
	}

	input:not([type='checkbox']):not([type='radio']):not([type='file']),
	select,
	textarea {

		+ .#{$component}__label {
			@include prefix(transition, 'transform 150ms ease');
			top: 14px;
			left: 15px;
			background: $bg-color;
			color: color('black');

			@include respondMin(point('min-md')) {
				left: 30px;
			}
		}

		&[disabled] {

			+ .#{$component}__label {
				background: color('grey-lightest');
				color: $border-color-focus;
			}
		}

		&:focus,
		&.focused {
			background: $bg-color-focus;

			+ .#{$component}__label {
				@include prefix(transform, 'translate(0,-36px)');
				@include fontSizeREM(14);
				background: $bg-color-focus;
			}
		}
	}

	select {

		+ .#{$component}__label {
			@include prefix(transform, 'translate(0,-36px)');
		}
	}

	input[type='checkbox'],
	input[type='radio'] {

		~ .#{$component}__error {
			display: none;
		}
	}

	input[type='file'] {
		+ .#{$component}__label span {
			@include prefix(transition, 'transform 150ms ease');
			top: 14px;
			left: $grid-gutter-width-half;
			background: $bg-color;
			color: color('black');
			position: absolute;

			@include respondMin(point('min-md')) {
				left: $grid-gutter-width;
			}
		}
	}

	.#{$component}__error {
		display: block;
		bottom: 0;
	}
}

// component class selector
.#{$component} {
	@extend %#{$component};
}
