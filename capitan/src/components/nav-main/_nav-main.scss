@charset "utf-8";

/**
 * Capitan navigation.scss v1.0.0
 *
 * Copyright brandung GmbH & Co.KG
 * http://www.brandung.de/
 *
 * Date: 2016-09-05
 * MIT License (MIT)
 */


/* ==========================================================================
   Main Navigation
   ========================================================================== */

$component: 'nav-main';
$nav-main-transition-speed: 200;

// block
%#{$component} {
	ul {
		list-style-type: none;
		margin: 0;

		&:focus {
			outline: none;
		}
	}

	li > a {
		display: block;
		text-decoration: none;
	}
}


// element
.#{$component}__list {
	display: flex;
	flex-direction: row;
	justify-content: flex-end;
	margin: 0;
	padding: 0;
	z-index: 10;
	
	// first level styling
	& > li {
		display: flex;
		justify-content: stretch;
		align-items: center;
		border-left: 1px solid color('green-light');
		margin-bottom: 0;
		
		@include respondMin(point('min-lg')) {
			justify-content: center;
		}
		
		@include respondMin(point('min-xl')) {
			flex-basis: auto;
		}
		
		&:first-of-type {
			border-left: 0;
			
			a {
				@include respondMin(point('min-xl')) {
					padding-left: 0;
				}
			}
		}
		
		&:last-of-type {
			a {
				padding-right: 0;
			}
		}

		& > span,
		& > a {
			@include fontSizeREM(14);
			align-items: center;
			display: flex;
			line-height: 19px;
			position: relative;
			text-decoration: none;
			cursor: pointer;
			outline: none;
			min-height: 50px;
			height: 100%;
			white-space: nowrap;
			
			@include respondMin(point('min-lg')) {
				@include fontSizeREM(12);
				@include font($ff-medium);
				text-decoration: none;
				z-index: 3;
				padding: 6px $grid-gutter-width-half;
				color: color('black');
			}

			@include respondMin(point('min-xl')) {
				@include fontSizeREM(14);
				padding: 6px 15px;
			}
			
			@include respondMin(point('min-xxl')) {
				padding: 6px $grid-gutter-width;
			}

			& > .pointer {
				@include prefix('transform-origin', 'center top');
				transition: transform 400ms ease;
				position: absolute;
				bottom: -29px;
				left: 0;
				width: 100%;
				height: 0;
				
				.#{$header-sticky-class} & {
					transform: translateY(-13px);
				}
				
				&:before,
				&:after {
					@include respondMin(point('min-lg')) {
						@include prefix('transform', 'scale(0)');
						@include prefix('transform-origin', 'center bottom');
						@include prefix('transition', 'transform 200ms ease');
						content: '';
						width: 0;
						height: 0;
						border-left: 10px solid transparent;
						border-right: 10px solid transparent;
						border-bottom: 12px solid color('white');
						border-top: 10px solid transparent;
						position: absolute;
						z-index: 4;
						left: 50%;
						bottom: 0;
						margin-left: -8px;
					}
				}
				
				&:after {
					@include respondMin(point('min-lg')) {
						border-left: 12px solid transparent;
						border-right: 12px solid transparent;
						border-bottom: 16px solid color('ci');
						border-top: 12px solid transparent;
						z-index: 3;
						margin-left: -10px;
					}
				}
			}
		}
	}
	
	.level0 {
		width: auto;
		
		//Styling for level0 Items behavoir. create modifier for less than 5 elements width: 100% else auto
		&--even {
			width: 100%;
			
			& > .level-top > .pointer {
				bottom: -27px;
			}
		}
	
		> a,
		> span {
			> div {
				> span {
					display: block;
				}
			}
		}
	}

	// second level styling
	.level1 {
		& > a {
			@include respondMin(point('min-lg')) {
				@include fontSizeREM(18);
				@include font($ff-semibold, $typo-weight-bold);
				margin-bottom: $grid-gutter-width*1.5;
				margin-top: 70px;
			}

			& + ul {
				padding-left: 0;
			}
		}
	}

	// third level styling
	.level2 {
		& > a {
			@include respondMin(point('min-lg')) {
				@include font($ff-regular);
				@include fontSizeREM(16);
				margin-top: $grid-gutter-width;
			}

			&.util-link {
				@include font($ff-medium);
				color: color('accent-blue');
				white-space: nowrap;
				
				&:hover {
					color: color('ci-hover');
				}
			}
		}
	}

	& > li:hover > a,
	& > li:hover > span,
	& > .is-active > a,
	& > .is-active > span,
	& > .is-current > a,
	& > .is-current > span {
		@include respondMin(point('min-lg')) {
			color: color('ci');
		}
	}

	& > .is-active {
		& > a > .pointer,
		& > span > .pointer {
			&:before,
			&:after {
				@include prefix('transform', 'scale(1)');
			}
		}

		.#{$component}__flyout {
			@include prefix('transition-delay', $nav-main-transition-speed*2 + ms);
			opacity: 1;
			visibility: visible;
			
			> ul,
			> .#{$component}__highlight {
				visibility: visible;
				opacity: 1;
			}
		}
	}
}

.#{$component}__highlight {
	height: 100%;
	max-width: 30%;
	padding: 0 0 70px;
	background: color('green-lightest');
	color: color('black');
	order: 2;
	flex-basis: 30%;
	flex: 1 auto;

	@include respondMin(point('min-lg')) {
		padding: 0 $grid-gutter-width 70px;
	}

	@include respondMin(point('min-xl')) {
		flex-basis: 37%;
		max-width: 37%;
		padding: 0 $grid-gutter-width*2 70px;
	}
}

.#{$component}__flyout {

	@include respondMin(point('min-lg')) {
		transition: opacity $nav-main-transition-speed + ms ease, visibility $nav-main-transition-speed + ms ease;
		transition-delay: $nav-main-transition-speed + ms;
		align-items: stretch;
		display: flex;
		flex-wrap: wrap;
		position: absolute;
		left: 50%;
		width: 100% !important;
		top: 100%;
		transform: translateX(-50%);
		z-index: 2;
		visibility: hidden;
		opacity: 0;
		padding: 0 0 0 $grid-gutter-width;
		/* max-height -> 100vh - nav height */
		max-height: calc(100vh - #{$header-desktop-height});
		overflow: auto;
		overflow-x: hidden;
		max-width: $container-max-widths + px;
		flex: 1 auto;
	}

	& > ul {
		transition: opacity $nav-main-transition-speed + ms ease, visibility $nav-main-transition-speed + ms ease;
		visibility: hidden;
		opacity: 0;
		align-content: flex-start;
		display: flex;
		flex: 2 0px;
		flex-wrap: wrap;
		margin-left: -$grid-gutter-width-half;
		padding: 0 0 70px;

		& > li {
			@include respondMin(point('min-lg')) {
				flex-grow: 1;
				flex-basis: percentage(1/5);
				max-width: percentage(1/5);
				margin-bottom: $grid-gutter-width;
				padding: 0 $grid-gutter-width-half;
			}
		}
	}

	a {
		display: block;
		color: color('grey-dark')
	}

	.#{$component}__highlight {
		transition: opacity $nav-main-transition-speed + ms ease, visibility $nav-main-transition-speed + ms ease;
		visibility: hidden;
		opacity: 0;
		
		& + ul > li {
			flex-basis: percentage(1/3);
			max-width: percentage(1/3);
		}
	}
}

.#{$component}__flyout-layer {
	@include prefix('transform-origin', '50% 0');
	@include prefix('transition', 'transform #{$nav-main-transition-speed} + ms ease');
	@include prefix('transform', 'scaleY(0)');
	@include prefix('transition-delay', $nav-main-transition-speed + ms);
	will-change: transform;
	background: color('white');
	position: absolute;
	z-index: -1;
	left: 0;
	right: 0;
	top: 100%;
	height: 1px;

	.is-nav-open & {
		@include prefix('transition-delay', $nav-main-transition-speed + ms);
	}

	@include respondMax(point('max-md')) {
		display: none;
	}
}

.#{$component}__overlay {
	@include prefix('transition', 'opacity #{$nav-main-transition-speed} + ms ease, visibility #{$nav-main-transition-speed} + ms ease');
	position: fixed;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	background: rgba(color('black'), .4);
	opacity: 0;
	visibility: hidden;
	pointer-events: none;
	z-index: 9;

	.is-nav-open & {
		@include prefix('transition-delay', $nav-main-transition-speed + ms);
		opacity: 0.85;
		visibility: visible;
		pointer-events: auto;
	}

	@include respondMax(point('max-md')) {
		display: none;
	}
}

// modifier


// component class selector
.#{$component} {
	@extend %#{$component};
}